<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[IndyRB.org]]></title>
  <link href="http://indyrb.github.io/atom.xml" rel="self"/>
  <link href="http://indyrb.github.io/"/>
  <updated>2018-06-18T13:00:32-04:00</updated>
  <id>http://indyrb.github.io/</id>
  <author>
    <name><![CDATA[The Indianapolis Ruby Brigade]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Meetup June 13th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/06/13/meetup-june13/"/>
    <updated>2018-06-13T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2018/06/13/meetup-june13</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/whatintheflack">Chris Flack</a> - Strong Parameters (&amp; other fun party conversations)</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/CbPTb_4bVQw" frameborder="0" allowfullscreen></iframe>


<p>Ruby Jam by Chris Flack:</p>

<p>With some inspiration from Stephen’s params talk last month, Chris talks little about some useful tricks and dangerous pitfalls I’ve learned from working with Rails&#8217; Strong Parameters protections.</p>

<p>Chris is an Associate Software Developer at MOBI. He started in tech working as a Genius for Apple, and he still has a big head about that title. He wandered around for a few years as an IT generalist before attending The Iron Yard and starting a career in coding.</p>

<p>Away from work, he&rsquo;s an avid reader, home-brewer, and gamer. He has a degree from Ball State in religious studies and counseling psychology. And he thinks all of that is a lot more relevant to software development than it might sound.</p>

<ul>
<li><a href="https://slides.com/ccflack/strong-params/">Slides</a></li>
</ul>


<h3>Fishbowl Panel on Mentoring Engineers</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/TSwL8n9xL28" frameborder="0" allowfullscreen></iframe>


<h3>Panelists (in order of first appearance in a chair):</h3>

<ul>
<li><a href="https://twitter.com/andrewariley87">Andrew Riley</a></li>
<li><a href="https://twitter.com/d_palaz">Dana Palazzo</a></li>
<li><a href="https://twitter.com/dstrus">Davey Strus</a></li>
<li><a href="https://twitter.com/coleydotco">Stephen Coley</a></li>
<li><a href="https://twitter.com/Ben_Doane">Ben Doane</a></li>
<li><a href="https://twitter.com/mileszs">Miles Sterrett</a></li>
<li><a href="https://twitter.com/unixmonkey">Dave Jones</a></li>
<li><a href="https://twitter.com/cvannoy">Chris Vannoy</a></li>
<li><a href="https://twitter.com/whatintheflack">Chris Flack</a></li>
<li><a href="https://twitter.com/10scuba_steve">Stephen Freund</a></li>
<li><a href="https://twitter.com/afstanton">Aaron F. Stanton</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup May 9th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/05/09/meetup-may9/"/>
    <updated>2018-05-09T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2018/05/09/meetup-may9</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/10scuba_steve">Stephen Freund</a> - Dispelling The Magic of the Params Variable</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/tenJB1UxkCM" frameborder="0" allowfullscreen></iframe>


<p>Active Record makes interfacing with the database in a Rails app easy and clean, but it can cause headaches when working with a lot of data. I will walk through how to effectively use Rails to Create, Read, Update, and Destroy Mb or Gb of data, as well as what might be causing the headaches in the first place.</p>

<p>Stephen Freund is a data engineer at Springbuk. His primary focus for the last ~1 year has been normalizing and importing healthcare data for use in the Springbuk app. Besides writing Ruby, he enjoys running, reading, watching football, and debating the merits of Star Wars vs Star Trek.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup April 11th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/04/11/meetup-april11/"/>
    <updated>2018-04-11T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2018/04/11/meetup-april11</id>
    <content type="html"><![CDATA[<h3>Ben Cochran - Pry - A Ruby Developer&rsquo;s Friend</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/96OkAtDaBbg" frameborder="0" allowfullscreen></iframe>


<p>In the Ruby world, Pry is IRB on steroids. In a blazingly short period of time you will learn how to install and invoke it, replace your Rails console with it, use it to debug server issues inline, configure macros and shortcuts, and a couple of other neat tips and tricks.</p>

<p>Ben is a Polyglot Principal Full Stack Developer and Architect with 15 years of experience developing standalone and web based applications in Enterprise, Freelance and Startup environments. His company, enhasa.io, is seeking contract work and potential CTO-for-hire engagements. He also has a penchant for 3D Printing as well as using Kubernetes for orchestration of containerized applications.</p>

<h3><a href="https://www.linkedin.com/in/jamesbvsh/">James Bush</a> - Generating Markdown Docs for Rails Models with James Bush</h3>

<p>James shows off a practical solution to crawl a typical Rails app to generate documentation on models, fields and relationships and output to Markdown.</p>

<p>Video is not available, but here&rsquo;s the code shown in the talk:</p>

<p><a href="https://gist.github.com/jajajames/b1033b27904b275f0b29ffb321de92b0">GitHub Gist</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Rails</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">eager_load!</span>
</span><span class='line'>
</span><span class='line'><span class="n">models_to_document</span> <span class="o">=</span> <span class="no">ApplicationRecord</span><span class="o">.</span><span class="n">descendants</span>
</span><span class='line'>  <span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
</span><span class='line'>  <span class="o">.</span><span class="n">uniq</span>
</span><span class='line'>  <span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span>
</span><span class='line'>    <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span><span class="o">.</span><span class="n">connection</span><span class="o">.</span><span class="n">table_exists?</span> <span class="n">m</span><span class="o">.</span><span class="n">underscore</span><span class="o">.</span><span class="n">pluralize</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:constantize</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">model_descriptions</span> <span class="o">||=</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'><span class="n">models_to_document</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">model</span><span class="o">|</span>
</span><span class='line'>  <span class="n">model_referenced_by</span> <span class="o">=</span> <span class="n">models_to_document</span>
</span><span class='line'>    <span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">m</span><span class="o">|</span> <span class="n">m</span><span class="o">.</span><span class="n">column_names</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="s2">&quot;</span><span class="si">#{</span> <span class="n">model</span><span class="o">.</span><span class="n">table_name</span><span class="o">.</span><span class="n">singularize</span> <span class="si">}</span><span class="s2">_id&quot;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_references_to</span> <span class="o">=</span> <span class="n">model</span>
</span><span class='line'>    <span class="o">.</span><span class="n">column_names</span>
</span><span class='line'>    <span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">cn</span><span class="o">|</span> <span class="n">cn</span> <span class="o">=~</span> <span class="sr">/_id/</span> <span class="p">}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">r</span><span class="o">|</span> <span class="n">r</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/_id/</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>    <span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:camelize</span><span class="p">)</span>
</span><span class='line'>    <span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="s1">&#39;, &#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_ancestors</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">ancestors</span><span class="o">.</span><span class="n">select</span> <span class="p">{</span> <span class="o">|</span><span class="n">k</span><span class="o">|</span> <span class="n">k</span> <span class="o">&lt;</span> <span class="no">ApplicationRecord</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_descendants</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">descendants</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_heirarchy</span> <span class="o">=</span> <span class="p">(</span><span class="n">model_ancestors</span> <span class="o">+</span> <span class="n">model_descendants</span><span class="p">)</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:to_s</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_column_names</span> <span class="o">=</span> <span class="n">model</span><span class="o">.</span><span class="n">column_names</span><span class="o">.</span><span class="n">reject</span> <span class="p">{</span> <span class="o">|</span><span class="n">cn</span><span class="o">|</span> <span class="n">cn</span> <span class="o">=~</span> <span class="sr">/\Aid|created_at|updated_at|uuid/</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">model_description</span> <span class="o">=</span> <span class="n">model_descriptions</span><span class="o">[</span><span class="n">model</span><span class="o">.</span><span class="n">to_s</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;### </span><span class="si">#{</span> <span class="n">model</span><span class="o">.</span><span class="n">to_s</span> <span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span>
</span><span class='line'>  <span class="nb">print</span> <span class="n">obj</span> <span class="s2">&quot;```&quot;</span>
</span><span class='line'>  <span class="s2">&quot;</span><span class="si">#{</span> <span class="n">model_heirarchy</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">model_name</span><span class="o">|</span> <span class="nb">puts</span> <span class="n">model_name</span> <span class="si">}</span><span class="s2"> }&quot;</span> <span class="k">if</span> <span class="n">model_heirarchy</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;</span> <span class="mi">1</span>
</span><span class='line'>  <span class="nb">puts</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span> <span class="n">model</span><span class="o">.</span><span class="n">to_s</span> <span class="si">}</span><span class="s2"> &lt;- </span><span class="si">#{</span> <span class="n">model_referenced_by</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">model_referenced_by</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span> <span class="n">model</span><span class="o">.</span><span class="n">to_s</span> <span class="si">}</span><span class="s2"> -&gt; </span><span class="si">#{</span> <span class="n">model_references_to</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="k">if</span> <span class="n">model_references</span><span class="p">)</span><span class="n">_to</span><span class="o">.</span><span class="n">present?</span>
</span><span class='line'>  <span class="nb">puts</span>
</span><span class='line'>  <span class="n">model_column_names</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">cn</span><span class="o">|</span> <span class="nb">puts</span> <span class="s2">&quot;  |</span><span class="si">#{</span> <span class="n">cn</span> <span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;```&quot;</span>
</span><span class='line'>  <span class="nb">puts</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;</span><span class="si">#{</span> <span class="n">model</span><span class="o">.</span><span class="n">description</span> <span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="nb">puts</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Output as Markdown (for a few models):</h2>

<h3>User</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">User</span> <span class="o">&lt;-</span> <span class="no">Certification</span><span class="p">,</span> <span class="no">Invitation</span><span class="p">,</span> <span class="no">Message</span><span class="p">,</span> <span class="no">Philosophy</span><span class="p">,</span> <span class="no">Prep</span><span class="p">,</span> <span class="no">Resource</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">|</span><span class="n">email</span>
</span><span class='line'>  <span class="o">|</span><span class="n">encrypted_password</span>
</span><span class='line'>  <span class="o">|</span><span class="n">reset_password_token</span>
</span><span class='line'>  <span class="o">|</span><span class="n">reset_password_sent_at</span>
</span><span class='line'>  <span class="o">|</span><span class="n">sign_in_count</span>
</span><span class='line'>  <span class="o">|</span><span class="n">current_sign_in_at</span>
</span><span class='line'>  <span class="o">|</span><span class="n">last_sign_in_ip</span>
</span><span class='line'>  <span class="o">|</span><span class="nb">name</span>
</span><span class='line'>  <span class="o">|</span><span class="n">gender</span>
</span><span class='line'>  <span class="o">|</span><span class="n">age</span>
</span><span class='line'>  <span class="o">|</span><span class="n">bio</span>
</span><span class='line'>  <span class="o">|</span><span class="n">height</span>
</span><span class='line'>  <span class="o">|</span><span class="n">phone_number</span>
</span><span class='line'>  <span class="o">|</span><span class="n">avatar_file_name</span>
</span><span class='line'>  <span class="o">|</span><span class="n">avatar_content_type</span>
</span><span class='line'>  <span class="o">|</span><span class="n">avatar_file_size</span>
</span><span class='line'>  <span class="o">|</span><span class="n">coach</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Contest</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Contest</span> <span class="o">-&gt;</span> <span class="no">Prep</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">|</span><span class="n">title</span>
</span><span class='line'>  <span class="o">|</span><span class="n">prep_id</span>
</span><span class='line'>  <span class="o">|</span><span class="n">date</span>
</span><span class='line'>  <span class="o">|</span><span class="n">url</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Conversation</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Conversation</span> <span class="o">&lt;-</span> <span class="no">Message</span>
</span><span class='line'><span class="no">Conversation</span> <span class="o">-&gt;</span> <span class="no">Sender</span><span class="p">,</span> <span class="no">Recipient</span>
</span><span class='line'>
</span><span class='line'>  <span class="o">|</span><span class="n">sender_id</span>
</span><span class='line'>  <span class="o">|</span><span class="n">recipient_id</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup March 14th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/03/14/meetup-march14/"/>
    <updated>2018-03-14T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2018/03/14/meetup-march14</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/weswinham">Wes Winham</a> - Pen Testing The Developer Interview: Attacks that ace tech interviews and defenses that build better teams</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/X-m2zO6epiE" frameborder="0" allowfullscreen></iframe>


<p>The developer hiring process is vulnerable. Let’s attack it!</p>

<p>We’ll draw on the pen testers toolkit and lessons learned the hard way across my decade of startup hiring. We&rsquo;ll break down the typical developer interview process. Then, we&rsquo;ll use the lens of social engineering and cognitive bias to identify specific tactics for acing interviews. Finally, we’ll defend our interviews to make them better at predicting team success.</p>

<p>Attendees will leave armed with both a) tools to be a more effective interviewer and b) tools to presents their best self as a candidate.</p>

<p>Wes spent the last 10 years responsible for engineering at an Indianapolis SaaS startup called PolicyStat. Through building that product team from scratch, he learned (the hard way) a lot about hiring. He discovered that&rsquo;s it is deceptively difficult. After selling PolicyStat last year, Wes started a SaaS company called Woven to fix developer hiring.</p>

<h3><a href="https://twitter.com/t27duck">Tony Drake</a> - Rolling your own Ruby package</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/kPUzLZN6Zx8" frameborder="0" allowfullscreen></iframe>


<p>There may come a time when rbenv, rvm, or cruby won&rsquo;t cut it for your use case. Sometimes you need or want a current-day Ruby version installed on the system level but most Linux distros provide really out of date Rubies. To get what you want, you need to roll your own Ruby. Creating OS packages may sound scary, but in reality they are easy once you have a build system setup. I currently maintain a small set of servers for my side projects and have used my own self-built package of Ruby for quite a while now.</p>

<p>Who is Tony Drake?
Tony is a senior web developer with about 10 years (most of it in Ruby) of total experience building websites professionally. By day, he curses DHH&rsquo;s name while hacking away at code and trying to keep junior devs from scraping their knees. By night, he&rsquo;s peeling away from the starting line while blowing up other vehicles in my way in Mario Kart.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup February 14th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/02/14/meetup-february14/"/>
    <updated>2018-02-14T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2018/02/14/meetup-february14</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/10scuba_steve">Stephen Freund</a> - A Brief Tour of Shoes (That Ruby GUI Framework)</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/SEwu_BtfUSs" frameborder="0" allowfullscreen></iframe>


<p>Stephen Freund gives an overview of the Shoes Ruby GUI framework.</p>

<p>Stephen is a data engineer at Springbuk. He loves Ruby and has been professionally using it for around 2 years.</p>

<h3><a href="https://twitter.com/soulcutter">Bradley Schaefer</a> - Metaprogramming with <code>super</code> powers</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/ukfAgLKnYZM" frameborder="0" allowfullscreen></iframe>


<p>Metaprogramming in Ruby gets a bad rap, yet Rails itself is chock-full of metaprogramming. So what is it that separates good metaprogramming from bad?</p>

<p>Here we will take a look at some of the problems people encounter when they attempt to wield it themselves, and approaches that can make your own metaprogramming code feel as magical as it feels in Rails.</p>

<p>Bradley has lived in six different states but has finally settled into Cleveland, Ohio as his base of operations. He&rsquo;s a lead engineer working remotely for Stitch Fix in San Francisco and will probably talk your ear off about the benefits of the remote life if you give him a chance. He&rsquo;s been a contributor to RSpec on the RSpec core team and wishes he had more time to spend on OSS. You can connect with him on Twitter as <a href="https://twitter.com/soulcutter">@soulcutter</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup January 10th, 2018]]></title>
    <link href="http://indyrb.github.io/posts/2018/01/10/meetup-january10/"/>
    <updated>2018-01-10T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2018/01/10/meetup-january10</id>
    <content type="html"><![CDATA[<h3><a href="http://linkedin.com/in/dmgregg/">David Michael Gregg</a> - The Ubiquitous Utility of Regular Expressions</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/zXh7RtLXPEQ" frameborder="0" allowfullscreen></iframe>


<p>David Michael Gregg walks through some basic RegEx features and use-cases in a sensible way.</p>

<p>You may not leave ready to extract a list of split infinitives from &ldquo;Moby Dick,&rdquo; but maybe you&rsquo;ll no longer see ASCII voodoo the next time you encounter someone&rsquo;s goofy email validation.</p>

<p>David Michael Gregg is an endangered species of The Iron Yard&rsquo;s Corporate Training team, where he teaches Angular 4 and Java&rsquo;s Spring Framework for Liberty Mutual. He is a graduate of TIY&rsquo;s Indianapolis academy in Ruby on Rails and a refugee from the world of IT management.</p>

<p>Reach him at <a href="http://linkedin.com/in/dmgregg/">http://linkedin.com/in/dmgregg/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup November 8th, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/11/08/meetup-november8/"/>
    <updated>2017-11-08T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2017/11/08/meetup-november8</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/dan_alyst">Daniel Carpenter</a> - Let&rsquo;s Do Some (Data) Science in Ruby</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/3MZFCB8A5AY" frameborder="0" allowfullscreen></iframe>


<p>When faced with a data science problem, most people reach for Python or R but there is a growing ecosystem of data science tools for Ruby. Daniel briefly discusses what data science is, how it is similar and different from software engineering, and gives an introduction to some of the tools available to Rubyists.</p>

<p>Daniel Carpenter is a software engineer and data scientist with special interest in health technology. He works for Omada Health, a San Francisco based digital health company offering online health coaching for pre-diabetes. He&rsquo;s been a software engineer for about 8 years and Rubyist for about 6 years.</p>

<h3><a href="https://twitter.com/kyleashipley">Kyle Shipley</a> - Webpacker Basics for a Scalable Frontend</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/50KHLBaOU18" frameborder="0" allowfullscreen></iframe>


<p>Rails has had a pathological aversion to frontend JavaScript frameworks for years, but no more! Learn about Webpack, the module bundling technology that&rsquo;s taken the JavaScript world by storm &ndash; at least for a week or two &ndash; and how you can incorporate it seamlessly into your Rails application.</p>

<p>Who is Kyle Shipley?
He&rsquo;s the co-founder of Woven, exploring better ways to hire software engineers. He&rsquo;s been fighting modern JavaScript frameworks since Backbone in 2011 and actually started enjoying them in 2014 with React.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup October 11th, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/10/11/meetup-october11/"/>
    <updated>2017-10-11T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2017/10/11/meetup-october11</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/10scuba_steve">Stephen Freund</a> - Data Management in Rails</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/-tA1PzyMnds" frameborder="0" allowfullscreen></iframe>


<p>Active Record makes interfacing with the database in a Rails app easy and clean, but it can cause headaches when working with a lot of data. I will walk through how to effectively use Rails to Create, Read, Update, and Destroy Mb or Gb of data, as well as what might be causing the headaches in the first place.</p>

<p>Stephen Freund is a data engineer at Springbuk. His primary focus for the last ~1 year has been normalizing and importing healthcare data for use in the Springbuk app. Besides writing Ruby, he enjoys running, reading, watching football, and debating the merits of Star Wars vs Star Trek.</p>

<h3><a href="https://twitter.com/dstrus">Davey Strus</a> - The Path to Senior</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/t3_aizXPbQg" frameborder="0" allowfullscreen></iframe>


<p>Davey Strus goes over what he believes are the key attributes to work towards to evaluate and achieve the title of &ldquo;Senior Developer&rdquo;.</p>

<p>Davey is a partner at Fretless, where he codes and teaches Ruby and JavaScript.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup September 13, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/09/13/meetup-september13/"/>
    <updated>2017-09-13T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2017/09/13/meetup-september13</id>
    <content type="html"><![CDATA[<h3>Lightning Panel!</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/zMnFZz3sYZQ" frameborder="0" allowfullscreen></iframe>


<h3>Topics:</h3>

<ul>
<li>What is important to me when looking for a job?</li>
<li>What is important to me when looking to hire?</li>
<li>What code lesson could you have learned early in your career that would&rsquo;ve saved you a ton of pain?</li>
<li>What gem do you keep returning to, time and time again? i.e. a long-lived, super useful, under-the-radar thing.</li>
<li>What is your favorite non-standard pattern to apply to a Rails project?</li>
<li>When do you open source your code? How do you keep up with managing it?</li>
</ul>


<h3>Panelists:</h3>

<p><a href="https://twitter.com/stevehodgesindy">Steve Hodges</a></p>

<p>Steve is a full-time rubyist and director of technology at Localstake, an Indy-based financial startup. He&rsquo;s written web apps since 1999, switching to primarily working in Ruby on Rails work in 2011.</p>

<p><a href="https://twitter.com/claytron">Clayton Parker</a></p>

<p>Clayton is the DevOps wizard at Octiv, where he got his professional start in Ruby. When he&rsquo;s not hacking away in Vim, you&rsquo;ll find him on the soccer field or drinking a craft beer somewhere around town.</p>

<p><a href="http://twitter.com/ar3_me">Andrew Robinson III</a></p>

<p>Andrew is the head of product and engineering at Lessonly. He started out doing Net and Java (even some COBOL back in the high school days)&hellip; but found the light around 2011 which is when he found RoR. He loves engineering, but recently his passions have been split between engineering, design, product, and servant leadership.</p>

<p><a href="http://twitter.com/annamul">Anna Carey</a></p>

<p>Anna is a Team Lead/Senior Developer for MOBI and has been programming in Ruby since 2007.  She likes DevOps and performance work far more than UI. Before that, she wrote java for the NCAA. She has two adorable goofball daughters that are 1 and 5.</p>

<p><a href="https://twitter.com/t27duck">Tony Drake</a></p>

<p>A senior web developer with about 10 years (most of it in Ruby) of total experience building web sites professionally. By day, he curses DHH&rsquo;s name while hacking away at code and trying to keep junior devs from scraping their knees. By night, he&rsquo;s peeling away from the starting line while blowing up other vehicles in his way in Mario Kart.</p>

<h3>Resources:</h3>

<ul>
<li><a href="http://dilbert.com/">Dilbert</a></li>
<li><a href="https://github.com">GitHub</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0020/">The Zen of Python</a></li>
<li><a href="https://www.sandimetz.com/99bottles/sample/#_shameless_green">Sandi Metz - Shameless Green</a></li>
<li><a href="http://www.engineyard.com/blog/keeping-your-rails-controllers-dry-with-services">Service Objects (POROs)</a></li>
<li><a href="https://robots.thoughtbot.com/activemodel-form-objects">Form Objects</a></li>
<li><a href="https://semaphoreci.com/community/tutorials/how-to-reduce-controller-bloat-with-interactors-in-ruby">Interactor pattern</a></li>
<li><a href="https://practicingruby.com/articles/creational-design-patterns#factory-method">Factory Pattern</a></li>
<li><a href="https://github.com/mperham/sidekiq">Sidekiq</a></li>
<li><a href="https://github.com/resque/resque">Resque</a></li>
<li><a href="http://haml.info/">Haml Comments</a></li>
<li><a href="https://activeadmin.info/">ActiveAdmin</a></li>
<li><a href="http://pryrepl.org/">Pry</a></li>
<li><a href="https://github.com/activerecord-hackery/squeel">Squeel</a></li>
<li><a href="https://github.com/elabs/pundit">Pundit</a></li>
<li><a href="https://github.com/dejan/rails_panel">Rails Panel</a></li>
<li><a href="https://github.com/flyerhzm/bullet">Bullet</a></li>
<li><a href="https://github.com/cldwalker/hirb">Hirb</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup August 9, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/08/09/meetup-august9/"/>
    <updated>2017-08-09T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2017/08/09/meetup-august9</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/nic_ollis">Nic Ollis</a> - GraphQL and You</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/-TaqAcPQ1Jk" frameborder="0" allowfullscreen></iframe>


<p>Nic provides a beginners intro into <a href="http://graphql.org/">GraphQL</a>. How its compares to REST, as well how easy it is to get it integrated into your existing Rails project with a small tutorial on adding a query operation to a web app.</p>

<p>Nic Ollis is a Software Engineer at <a href="https://www.clustertruck.com/">ClusterTruck</a>. He primarily focuses on creating amazing software using Rails and React, with interest in moving over into machine learning in the near future. You can find out about his past and current projects at <a href="http://ollis.me/">http://ollis.me</a></p>

<ul>
<li><a href="http://indyrb.github.io/assets/20170809/GraphQL%20and%20You.pdf">Slides</a></li>
<li><a href="http://graphql.org/">GraphQL</a></li>
<li><a href="https://github.com/rmosolgo/graphql-ruby">GraphQL-Ruby Gem</a></li>
<li><a href="http://bit.ly/indy_rb_otter">Otter (example Rails project with GraphQL)</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup July 12, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/07/12/meetup-july12/"/>
    <updated>2017-07-12T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2017/07/12/meetup-july12</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/panozzaj">Anthony Panozzo</a> - Sidekiq</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/6cihVOlBoes" frameborder="0" allowfullscreen></iframe>


<p>In this presentation, you&rsquo;ll learn about why you might want to consider an asynchronous worker queue for your web application. We&rsquo;ll talk about some Ruby frameworks for doing so, and then cover Sidekiq in depth. We&rsquo;ll start with basic usage and testing of Sidekiq jobs. To provide more context, we will run through a quick overview of Redis (which Sidekiq is built on) and what it can be used for. Finally, we will explore some useful Sidekiq Pro extensions and point out some important things to watch out for.</p>

<p>Who is Anthony?</p>

<p>Hi, I&rsquo;m Anthony Panozzo. I work as a Senior Software Engineer at OurHealth, and have used Sidekiq on a couple of different projects over the last few years. One time I woke up and had a million jobs in a queue and was very concerned.</p>

<h3><a href="http://occameducation.com/about/leadership/">Daniel Brown</a> - WTF is Motivation?</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/mzH6dMiBvkk" frameborder="0" allowfullscreen></iframe>


<p>Ennui, lethargy and lassitude are fancy words often used to describe a basic problem: Person A doesn’t like doing Thing B and feels an obvious lack of enthusiasm &hellip; but Thing B is kind of important. In other words, no one calls you lazy because you didn’t create a temporary fork-and-spoon sculpture using your new cutlery. You get called lazy when you are supposed to do something that is important to somebody &hellip; and you don’t.</p>

<p>This talk is all about Self-Determination Theory (SDT), a psychological model that describes motivation as coming from autonomy, competency and relevance. My aim is to teach you to use SDT to build internal motivation when it doesn&rsquo;t come naturally and teach others to do the same.</p>

<p>Who is Daniel?</p>

<p>I (Daniel Brown) am a husband (to Nina), co-founder (of Occam Education) and code monkey (Rails!) in roughly that order. I studied Arabic and Russian as an undergrad, went to Syria and then dropped out of an MS program in Arabic to start Occam Education with my brother. In 2014, I went to a Rails coding bootcamp, and in 2016, I received an MS in Applied Positive Psychology. I have worked in education (tutoring and ESL) since 2005, and much of my recent work has been in coaching adolescents striving to build internal motivation and grit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup June 14, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/06/14/meetup-june14/"/>
    <updated>2017-06-14T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2017/06/14/meetup-june14</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/t27duck">Tony Drake</a> - Testing a Gem Against Different Databases and Different Versions of Rails</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/7H6AiL7Hi7I" frameborder="0" allowfullscreen></iframe>


<p>So you built a gem that integrates with ActiveRecord. You write tests, push to Github, CI passes, and then publish to RubyGems. Great! But later, someone submits a bug&hellip; the gem doesn&rsquo;t work with MySQL and Rails 4.2 and you only tested your gem against PostgreSQL and Rails 5. You want your gem to support all &ldquo;active&rdquo; versions of Rails and at least both PostgreSQL and MySQL. So how to do you it? How do you get your tests to be able to run against different versions of Rails and databases on a whim? Let&rsquo;s go through from start to finish the story of creating a gem and testing against these permutations of real world setups.</p>

<p>Tony Drake is a senior web developer with about 10 years (most of it in Ruby) of total experience building sites professionally. By day, He curses DHH&rsquo;s name while hacking away at code. By night, he&rsquo;s peeling away from the starting line while blowing up other vehicles in my way in Mario Kart.</p>

<h3><a href="https://twitter.com/chris_vannoy">Chris Vannoy</a> - Scripting the Mac with Ruby</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/owXhe4mKqwc" frameborder="0" allowfullscreen></iframe>


<p>Ruby’s a scripting language, so why not use it for, you know, scripting. When you combine MacOS’s built-in scripting and automation tools - such as Automator, launchd, AppleScript, Workflows and Services - with Ruby, nothing is out of reach. Let’s walk through MacOS’ core automation and scripting tools, and use a dash of Ruby to build ourselves something useful (or, failing that, something silly).</p>

<p>Chris has been developing in Ruby for more than a decade, is a former instructor at The Iron Yard coding bootcamp, and current Senior Engineer at Sigtsr. He cares entirely too much about college football, naps, and podcasts.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup March 8, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/02/08/meetup-march-8/"/>
    <updated>2017-02-08T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2017/02/08/meetup-march-8</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/t27duck">Tony Drake</a> - Reporting on Rails - ActiveRecord and ROLAP Working Together</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/L1E8cKWCEtU" frameborder="0" allowfullscreen></iframe>


<p>This talk is over a brief journey through the world of Relational Online Analytical Processing (ROLAP) and seeing how this can apply to Rails. This will also include a couple database considerations and possibly an overview of a DSL he&rsquo;s building that ties it all together.</p>

<p>Tony Drake is currently senior developer on a team specializing in billing and reporting for an enterprise-level Rails application where he co-architected a custom ROLAP framework using PostgreSQL on the backend. He&rsquo;d like to share his ten years (seven of those with Rails) of professional web development experience with others.  He can also kick anyone&rsquo;s butt in Mario Kart with Rosalina.</p>

<ul>
<li><a href="https://github.com/t27duck/showandtell/tree/master/presentations/indyrb/2017-03">Slides</a></li>
<li><a href="https://github.com/t27duck/active_reporting">Active Reporting Gem</a></li>
<li><a href="http://railsconf.com/program#session-130">Link to this Session at upcoming RailsConf 2017!</a></li>
</ul>


<h3><a href="https://twitter.com/rydertimberlake">Ryder Timberlake</a> - Expand Your Perspective and Change Your Life Through Pair Programming</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/LEHqhp1-zNQ" frameborder="0" allowfullscreen></iframe>


<p><em><em>Editor&rsquo;s Note:</em> This video is highly condensed for time and has poor audio due to many people speaking simultaneously. That said, I think it&rsquo;s a wonderful example of how to run an impromptu meetup workshop, and a view into the thought and processes of solving a few simple puzzles on Codewars.</em></p>

<p>Tech is siloed. Languages, teams, and services are siloed. Good design is frequently portrayed and interpreted as a constellation of context-independent best practices. And oftentimes we can hardly have a productive conversation about design without our knee-jerk ideas of the way we ought to build something getting in the way.<br/>
When we enforce conventions in a project, we often do so without a good understanding of which conventions are essential and which are peripheral. We often do so without a sufficiently shared vocabulary of design with which to argue constructively. And when we choose a tool, we often do so by merely defaulting to what we know behind a shield of inscrutable buzzwords &ndash; words whose meaning is rarely exposed to the same rigorous inquiry with which we examine spaces or tabs or choice of editor.</p>

<p>I would argue that a startling majority of the most intractable technical problems we face in software are simply interpersonal and communication problems expressing themselves in a technical domain. And I think we can make things a whole lot better by just putting our heads together.</p>

<p>This is more workshop than talk. Bring your laptop and ideally your free <a href="https://www.codewars.com">Codewars account</a>.</p>

<p>Ryder is an Iron Yard alumnus and engineer at Salesforce, where he writes tests for the Approvals app and is a contributor to the automated testing framework used across the Marketing Cloud. He is an outspoken advocate of sound implementations of pair programming, which he believes to holistically aid all manner of technical and human endeavors in software &ndash; from writing maintainable code and fostering good user experiences to encouraging effective communication and diversity in the workplace.</p>

<ul>
<li><a href="https://www.codewars.com/kata/57cebe1dc6fdc20c57000ac9">Codewars kata: Shortest Word</a></li>
<li><a href="https://www.codewars.com/kata/511f11d355fe575d2c000001">CodeWars kata: 2 Oldest Ages</a></li>
<li><a href="http://www.greaterthancode.com/podcast/episode-022-you-are-an-asset/">Ryder on Greater Than Code podcast: &ldquo;You Are an Asset&rdquo;</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup February 8, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/02/08/meetup-february-8/"/>
    <updated>2017-02-08T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2017/02/08/meetup-february-8</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/nullvoxpopuli">L. Preston Sego III</a> - My App is Too Big - Architecting for the Lazy</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/23o94WPDqCg" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="https://docs.google.com/presentation/d/18qV3IXbjfIeEFhEarpJBbjLqVEAV9e83RIzycWgdSFs/edit#slide=id.p">Slides</a></li>
<li><a href="http://github.com/nullvoxpopuli/drawers">Drawers Gem</a></li>
</ul>


<h3><a href="https://twitter.com/armzilla82">Seth Baughman</a> - The Rails Router - How it do</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/Phhsyoyp6_E" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="http://www.fretless.com/rails-router-how-it-do/">Blog Post - The Rails Router: How it do</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup January 11, 2017]]></title>
    <link href="http://indyrb.github.io/posts/2017/01/11/meetup-january-11/"/>
    <updated>2017-01-11T21:00:00-05:00</updated>
    <id>http://indyrb.github.io/posts/2017/01/11/meetup-january-11</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/milamsoft">Aaron Milam</a> - Building a Gem</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/Qb76cAfSoIo" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="http://guides.rubygems.org/make-your-own-gem">Rubygems.org - Make You Own Gem Guide</a></li>
<li><a href="http://bundler.io/v1.14/man/bundle-gem.1.html">How to use Bundler&rsquo;s built-in gem generator and tools</a></li>
</ul>


<h3><a href="https://twitter.com/t27duck">Tony Drake</a> - Totally not Thrown Together PSQL Talk #84</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/NCZN6I-crmo" frameborder="0" allowfullscreen></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup September 14, 2016]]></title>
    <link href="http://indyrb.github.io/posts/2016/09/14/meetup-september-14/"/>
    <updated>2016-09-14T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2016/09/14/meetup-september-14</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/t27duck">Tony Drake</a> - Arbitrary Multi Tenant Configuration for <strike>Fun</strike> and Profit</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/U_u2w7qNRWg" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="https://github.com/t27duck/showandtell/tree/master/presentations/indyrb/2016-09">Slides</a></li>
</ul>


<h3><a href="https://twitter.com/chris_vannoy">Chris Vannoy</a> - A Simple Plan: Building a Small Web API in Something New</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/BY8W7owgMEI" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="https://speakerdeck.com/dummied/a-simple-plan">Slides</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup August 10, 2016]]></title>
    <link href="http://indyrb.github.io/posts/2016/08/10/meetup-august-10/"/>
    <updated>2016-08-10T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2016/08/10/meetup-august-10</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/netshade">Chris Zelenak</a> - So You Have to Build Some Analytics</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/tLE_Z4rqGjs" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="http://scaleassembly.com/indy-rb-analytics.pdf">Slides</a></li>
<li><a href="http://scaleassembly.com/">Scale Assembly</a></li>
<li><a href="https://en.wikipedia.org/wiki/HyperLogLog">HyperLogLog</a></li>
<li><a href="http://www.acqualia.com/soulver/">SoulVer</a></li>
</ul>


<h3><a href="https://twitter.com/chris_vannoy">Chris Vannoy</a> - Stupid ActiveRecord Tricks</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/em6LYcQsEJo" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="https://github.com/rails/rails/tree/master/activerecord">ActiveRecord</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup June 8th, 2016]]></title>
    <link href="http://indyrb.github.io/posts/2016/06/08/meetup-june-8/"/>
    <updated>2016-06-08T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2016/06/08/meetup-june-8</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/plamere">Paul Lamere</a> - Data Mining Music</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/f7XN3RuDzmc" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="http://confreaks.tv/videos/railsconf2016-closing-keynote-paul-lamere">Confreaks - Closing Keynote: Paul Lamere</a></li>
<li><a href="https://www.spotify.com/us/">Spotify</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup May 11, 2016]]></title>
    <link href="http://indyrb.github.io/posts/2016/05/11/meetup-may-11/"/>
    <updated>2016-05-11T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2016/05/11/meetup-may-11</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/jheth">Joe Heth</a> - Bundler</h3>

<iframe width="100%" height="300" src="https://www.youtube.com/embed/BPX9adQCRvM" frameborder="0" allowfullscreen></iframe>


<ul>
<li><a href="http://bundler.io/">Bundler</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meetup April 13, 2016]]></title>
    <link href="http://indyrb.github.io/posts/2016/04/13/meetup-april-13/"/>
    <updated>2016-04-13T22:00:00-04:00</updated>
    <id>http://indyrb.github.io/posts/2016/04/13/meetup-april-13</id>
    <content type="html"><![CDATA[<h3><a href="https://twitter.com/ajporterfield">Andrew Porterfield</a> - Incorporating SMS into your Rails app using Twilio</h3>

<script async class="speakerdeck-embed" data-id="1bed27c4a983489c8bd0c22d73feecaf" data-ratio="1.77777777777778" src="//speakerdeck.com/assets/embed.js"></script>


<ul>
<li><a href="https://www.twilio.com/">Twilio</a></li>
<li><a href="https://www.evrconnect.com/">evrconnect</a></li>
<li><a href="https://github.com/ajporterfield/indyrb_apr_2016_twilio">Code from the talk</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
